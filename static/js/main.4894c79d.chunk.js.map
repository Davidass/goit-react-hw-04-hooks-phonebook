{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Container/Container.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","ContactForm","handelAddContact","isExistContact","useState","name","setName","number","setNumber","handleInputForm","event","target","value","toast","error","resetForm","className","s","form","onSubmit","preventDefault","validateForm","trim","console","log","id","uuidv4","input","type","placeholder","onChange","button","ContactsList","contacts","onRemove","length","list","map","onClick","protoTypes","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","label","Container","children","container","Section","title","section","initialContacts","App","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","onAdd","newContact","onCheckContact","some","contact","contactId","autoClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4894c79d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__tr8ul\",\"form\":\"ContactForm_form__33tbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1sLYc\",\"contacts\":\"ContactsList_contacts__3gGrW\",\"button\":\"ContactsList_button__2BTbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__DTePZ\",\"filter\":\"Filter_filter__ZM8Sn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__KbdIH\",\"title\":\"Section_title__3QQdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cotainer\":\"Container_cotainer__1RkcW\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ handelAddContact, isExistContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputForm = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        toast.error(`There are no type input \"${name}\"`);\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // const validateForm = () => {\n    //   if (!name || !number) {\n    //     alert('Some filed is empty');\n    //     return;\n    //   }\n    const validateForm = name.trim();\n    if (isExistContact(name)) {\n      return toast.error(`${validateForm} Contact already exists`);\n    }\n    console.log(validateForm);\n\n    if (!validateForm) {\n      return toast.error('Please enter contact name');\n    }\n    handelAddContact({ name: validateForm, number, id: uuidv4() });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleFormSubmit}>\n      <label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleInputForm}\n        />\n      </label>\n      <label>\n        <input\n          className={s.input}\n          type=\"tell\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        {' '}\n        Add Contact{' '}\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onCheckContact: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <div className={s.contacts}>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => onRemove(id)}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Enter name for Search\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import propTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState, useEffect } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport ContactForm from 'components/ContactForm';\n\nimport ContactsList from 'components/ContactsList';\n\nimport Filter from 'components/Filter';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\n\nimport './App.css';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('contacts')) ?? [initialContacts]\n    );\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const handelAddContact = newContact => {\n    setContacts([...contacts, newContact]);\n  };\n\n  const isExistContact = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const handleDeleteContact = contactId => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const handleFilterChange = filter => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm onAdd={handelAddContact} onCheckContact={isExistContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 1 && (\n          <Filter filter={filter} onChange={handleFilterChange} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactsList\n            contacts={visibleContacts}\n            onRemove={handleDeleteContact}\n          />\n        ) : (\n          <p>Your phonebook is empty. Please add contact</p>\n        )}\n        <ToastContainer autoClose={3000} />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}